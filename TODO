// Create a sorted list of currency repositories where the fastest goes first.
// A Web-oriented SAPI might want to skip the network repository, and rely on
// CLI process(es) periodically updating the database, and, optionally, the cache.
$repositories = (new CurrencyRateRepositoryList())
    ->append(new CacheCurrencyRateRepository(getCache()))
    ->append(new DatabaseCurrencyRateRepository(getDatabaseConnection()))
    ->append(new NetworkCurrencyRateRepository(getNetworkClient()))
;

// The following block might appear in different places such as:
// - Web controller
// - A general-purpose service
// - CLI script running via crontab
// - wherever the user decides to fetch currency rates.
$missingRateStrategy = new RabbitMqScheduleUpdateStrategy(getRabbitMqMessageQueueChannel());
$defaultRate = new VoidCurrencyRate();
$rate = new VoidCurrencyRate();
foreach ($repositories as $repository) {
    $rate = $repository->find($sourceCurrency, $targetCurrency, $defaultRate);
    if ($rate->isValid()) {
        break;
    }
    $missingRateStrategy->handle($sourceCurrency, $targetCurrency, $repository);

    // Try to find the reverse rate
    $rate = $repository->find($targetCurrency, $sourceCurrency, $defaultRate);
    if ($rate->isValid()) {
        // Reverse from reverse is what we really need ;-)
        $rate = new BasicReverseCurrencyRate($rate);
        break;
    }
    $missingRateStrategy->handle($targetCurrency, $sourceCurrency, $repository);
}
